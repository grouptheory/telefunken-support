nb
})
str(outSet)
sum(seed == s)
matchSet <- lapply(outSet, function(x) x[x %in% hash[subject[seed != s]]])
matchSet
1 / rho
wts <-  lapply(matchSet, function(x){
wts1 <- list()
for(a in x){
mId <- which(hash[subject] == a)
for(id in mId){
wts1[[length(wts1) + 1]] <- 1 / (dPopulation * rho * (N - 1) / (degree[id] - 1) + 1)
}
}
unlist(wts1)
})
str(matchSet)
str(outSet)
hash[subject[seed != s]]]
hash[subject[seed != s]]
table(hash[subject[seed != s]])
m <- sum(unlist(wts))
dSample <- mean(degree[seed != s]) - 1
dPopulation <- ns / sum(1/degree)
m
length(unlist(outSet))
length(subject[seed != s])
length(unlist(outSet)) *
length(subject[seed != s]) * dSample / dPopulation
368636.5/m
crossSeedEstimateNum <- 0
crossSeedEstimateDenom <- 0
crossSeedEstimateNum <- crossSeedEstimateNum + length(unlist(outSet)) *
length(subject[seed != s]) * dSample / dPopulation
crossSeedEstimateDenom <- crossSeedEstimateDenom + m
crossSeedEstimateNum / crossSeedEstimateDenom
s <- seedIds[2]
print(s)
outSet <- apply(cbind(subject[seed == s],recruiter[seed == s]), 1, function(x){
excl <- c(hash[x[2]], hash[subject[recruiter == x[1]]])
nb <- hash[nbrs[[x[1]]]]
for(e in excl){
i <- which(nb %in% e)
if(length(i) > 0)
nb <- nb[-i[1]]
}
nb
})
matchSet <- lapply(outSet, function(x) x[x %in% hash[subject[seed != s]]])
wts <-  lapply(matchSet, function(x){
wts1 <- list()
for(a in x){
mId <- which(hash[subject] == a)
for(id in mId){
wts1[[length(wts1) + 1]] <- 1 / (dPopulation * rho * (N - 1) / (degree[id] - 1) + 1)
}
}
unlist(wts1)
})
m <- sum(unlist(wts))
dSample <- mean(degree[seed != s]) - 1
dPopulation <- ns / sum(1/degree)
length(unlist(outSet)) *
length(subject[seed != s]) * dSample / dPopulation
length(unlist(outSet)) *
length(subject[seed != s]) * dSample / dPopulation / m
crossSeedEstimateNum <- crossSeedEstimateNum + length(unlist(outSet)) *
length(subject[seed != s]) * dSample / dPopulation
crossSeedEstimateDenom <- crossSeedEstimateDenom + m
crossSeedEstimateNum / crossSeedEstimateDenom
NTildaCross(N)
s <- seedIds[3]
outSet <- apply(cbind(subject[seed == s],recruiter[seed == s]), 1, function(x){
excl <- c(hash[x[2]], hash[subject[recruiter == x[1]]])
nb <- hash[nbrs[[x[1]]]]
for(e in excl){
i <- which(nb %in% e)
if(length(i) > 0)
nb <- nb[-i[1]]
}
nb
})
matchSet <- lapply(outSet, function(x) x[x %in% hash[subject[seed != s]]])
wts <-  lapply(matchSet, function(x){
wts1 <- list()
for(a in x){
mId <- which(hash[subject] == a)
for(id in mId){
wts1[[length(wts1) + 1]] <- 1 / (dPopulation * rho * (N - 1) / (degree[id] - 1) + 1)
}
}
unlist(wts1)
})
m <- sum(unlist(wts))
dSample <- mean(degree[seed != s]) - 1
dPopulation <- ns / sum(1/degree)
crossSeedEstimateNum <- crossSeedEstimateNum + length(unlist(outSet)) *
length(subject[seed != s]) * dSample / dPopulation
crossSeedEstimateDenom <- crossSeedEstimateDenom + m
crossSeedEstimateNum / crossSeedEstimateDenom
crossSeedEstimateNum <- crossSeedEstimateNum + length(unlist(outSet)) *
length(subject[seed != s]) * dSample / dPopulation / m
source('~/Dropbox/telefunken2_BK/R/rds-pop.R')
hs
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
NTildaCross(10000)
uniroot(function(N) NTildaCross(N) - N, interval=c(2, 7000000000))
NTildaCross(10000)
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
NTildaCross(10000)
NTildaCross <- function(N){
crossSeedEstimateNum <- 0
crossSeedEstimateDenom <- 0
for(s in seedIds){
outSet <- apply(cbind(subject[seed == s],recruiter[seed == s]), 1, function(x){
excl <- c(hash[x[2]], hash[subject[recruiter == x[1]]])
nb <- hash[nbrs[[x[1]]]]
for(e in excl){
i <- which(nb %in% e)
if(length(i) > 0)
nb <- nb[-i[1]]
}
nb
})
if(is.null(outSet))
next
matchSet <- lapply(outSet, function(x) x[x %in% hash[subject[seed != s]]])
wts <-  lapply(matchSet, function(x){
wts1 <- list()
for(a in x){
mId <- which(hash[subject[seed != s]] == a)
for(id in mId){
wts1[[length(wts1) + 1]] <- 1 / (dPopulation * rho * (N - 1) / (degree[id] - 1) + 1)
}
}
unlist(wts1)
})
m <- sum(unlist(wts))
dSample <- mean(degree[seed != s]) - 1
dPopulation <- ns / sum(1/degree)
crossSeedEstimateNum <- crossSeedEstimateNum + length(unlist(outSet)) *
length(subject[seed != s]) * dSample / dPopulation
crossSeedEstimateDenom <- crossSeedEstimateDenom + m
print(length(unlist(outSet)) *
length(subject[seed != s]) * dSample / dPopulation / m)
}
crossSeedEstimateNum / crossSeedEstimateDenom
}
NTildaCross(10000)
optCross <- uniroot(function(N) NTildaCross(N) - N, interval=c(2, 7000000000))
optCross
populationEstimateHash <- function(subject, recruiter, degree, nbrs, hash, rho){
ns <- length(subject)
outSet <- apply(cbind(subject,recruiter), 1, function(x){
excl <- c(hash[x[2]], hash[subject[recruiter == x[1]]])
nb <- hash[nbrs[[x[1]]]]
for(e in excl){
i <- which(nb %in% e)
if(length(i) > 0)
nb <- nb[-i[1]]
}
nb
})
#browser()
dSample <- mean(degree) - 1
dPopulation <- ns / sum(1/degree)
matchSet <- lapply(outSet, function(x) x[x %in% hash[subject]])
NTilda <- function(N){
wts <-  lapply(matchSet, function(x){
wts1 <- list()
for(a in x){
mId <- which(hash[subject] == a)
for(id in mId){
wts1[[length(wts1) + 1]] <- 1 / (dPopulation * rho * (N - 1) / (degree[id] - 1) + 1)
}
}
unlist(wts1)
})
m <- sum(unlist(wts))
(dSample / dPopulation) * ns * length(unlist(outSet)) / m
}
opt <- uniroot(function(N) NTilda(N) - N, interval=c(2, 7000000000))
seed <- getSeed(subject,recruiter)
seedIds <- unique(seed)
NTildaCross <- function(N){
crossSeedEstimateNum <- 0
crossSeedEstimateDenom <- 0
for(s in seedIds){
outSet <- apply(cbind(subject[seed == s],recruiter[seed == s]), 1, function(x){
excl <- c(hash[x[2]], hash[subject[recruiter == x[1]]])
nb <- hash[nbrs[[x[1]]]]
for(e in excl){
i <- which(nb %in% e)
if(length(i) > 0)
nb <- nb[-i[1]]
}
nb
})
if(is.null(outSet))
next
matchSet <- lapply(outSet, function(x) x[x %in% hash[subject[seed != s]]])
wts <-  lapply(matchSet, function(x){
wts1 <- list()
for(a in x){
mId <- which(hash[subject[seed != s]] == a)
for(id in mId){
wts1[[length(wts1) + 1]] <- 1 / (dPopulation * rho * (N - 1) / (degree[id] - 1) + 1)
}
}
unlist(wts1)
})
m <- sum(unlist(wts))
dSample <- mean(degree[seed != s]) - 1
dPopulation <- ns / sum(1/degree)
crossSeedEstimateNum <- crossSeedEstimateNum + length(unlist(outSet)) *
length(subject[seed != s]) * dSample / dPopulation
crossSeedEstimateDenom <- crossSeedEstimateDenom + m
#print(length(unlist(outSet)) *
#        length(subject[seed != s]) * dSample / dPopulation / m)
}
crossSeedEstimateNum / crossSeedEstimateDenom
}
optCross <- uniroot(function(N) NTildaCross(N) - N, interval=c(2, 7000000000))
result <- list(
estimate=opt$root,
crossSeedEstimate= optCross$root
)
result
}
hashSize <- c(500, 1000, 5000, 10000, 100000)
rho <- 1 / hashSize
pest2 <- list()
for(i in 1:10){
rds <- sampRDS(el, d, seeds,g,ns,FALSE)
pest2[[i]] <- sapply(hashSize, function(hs){
hash <- floor(runif(n, min = 0, max=hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
})
print(pest2[[i]])
}
sapply(pest2, function(x) x[1,])
t(sapply(pest2, function(x) x[1,]))
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste("Pooled", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_cross) <- paste("Cross", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,20000), xlab="Hash Size")
abline(h=n,col="red")
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste("Pooled", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[2,]))
colnames(pest_cross) <- paste("Cross", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,20000), xlab="Hash Size")
abline(h=n,col="red")
pest_cross
n <- nrow(loc)
ns <- 1500 # rds sample size
seeds <- 15 # #of seeds
g <- rep(1,n)
d <- sapply(nbrs1,length)
hashSize <- c(1000, 5000, 10000, 100000, 1000000)
rho <- 1 / hashSize
pest2 <- list()
for(i in 1:50){
rds <- sampRDS(el1, d, seeds,g,ns,FALSE)
pest2[[i]] <- sapply(hashSize, function(hs){
hash <- floor(runif(n, min = 0, max=hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs1, hash, 1 / hs))
})
print(pest2[[i]])
}
seeds
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste("Pooled", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_cross) <- paste("Cross", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,200000), xlab="Hash Size")
abline(h=n,col="red")
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste("Pooled", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[2,]))
colnames(pest_cross) <- paste("Cross", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,200000), xlab="Hash Size")
abline(h=n,col="red")
source('~/Dropbox/telefunken2_BK/R/rds-pop.R')
hashSize <- c(1000, 5000, 10000, 100000, 1000000)
rho <- 1 / hashSize
pest2 <- list()
for(i in 1:50){
rds <- sampRDS(el1, d, seeds,g,ns,FALSE)
pest2[[i]] <- sapply(hashSize, function(hs){
hash <- floor(runif(n, min = 0, max=hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs1, hash, 1 / hs))
})
print(pest2[[i]])
}
ns <- 2000 # rds sample size
seeds <- 10 # #of seeds
g <- rep(1,n)
d <- sapply(nbrs1,length)
ns <- 1000 # rds sample size
seeds <- 7 # #of seeds
g <- rep(1,n)
d <- sapply(nbrs1,length)
hashSize <- c(1000, 5000, 10000, 100000, 1000000)
rho <- 1 / hashSize
pest2 <- list()
for(i in 1:50){
rds <- sampRDS(el1, d, seeds,g,ns,FALSE)
pest2[[i]] <- sapply(hashSize, function(hs){
hash <- floor(runif(n, min = 0, max=hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs1, hash, 1 / hs))
})
print(pest2[[i]])
}
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste("Pooled", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[2,]))
colnames(pest_cross) <- paste("Cross", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,120000), xlab="Hash Size")
abline(h=n,col="red")
129*8
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste("P", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[2,]))
colnames(pest_cross) <- paste("C", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,120000), xlab="Hash Size")
abline(h=n,col="red")
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste0("P", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[2,]))
colnames(pest_cross) <- paste0("C", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,120000), xlab="Hash Size")
abline(h=n,col="red")
boxplot(cbind(pest_est,pest_cross),ylim=c(0,120000), xlab="Hash Size",main=paste("britekite n=",ns,"seeds=",seeds))
boxplot(cbind(pest_est,pest_cross),ylim=c(0,120000), xlab="Hash Size",main=paste0("britekite n=",ns," seeds=",seeds))
abline(h=n,col="red")
pe<- pest_est
pc <- pest_cross
ns <- 2000 # rds sample size
seeds <- 12 # #of seeds
g <- rep(1,n)
d <- sapply(nbrs1,length)
hashSize <- c(1000, 5000, 10000, 100000, 1000000)
rho <- 1 / hashSize
pest2 <- list()
for(i in 1:50){
rds <- sampRDS(el1, d, seeds,g,ns,FALSE)
pest2[[i]] <- sapply(hashSize, function(hs){
hash <- floor(runif(n, min = 0, max=hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs1, hash, 1 / hs))
})
print(pest2[[i]])
}
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste0("P", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[2,]))
colnames(pest_cross) <- paste0("C", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,120000), xlab="Hash Size",
main=paste0("britekite n=",ns," seeds=",seeds," nim=",nrow(pest_est)," (P=Pooled, C=Cross Seed)"))
abline(h=n,col="red")
source("rds-pop.R")
n <- 10000 #pop size
ns <- 700 # rds sample size
seeds <- 7 # #of seeds
#d <- round(rlnorm(n,meanlog = 1)) + 1
d <- round(rexp(n,1/5)) + 1 #heavy tailed degrees
#d <- rpois(n,lambda = 5) + 1 #light tail
#d <- rep(10, n)
g <- rep(1,n)
el <- makeGraph(d)
nbrs <- lapply(1:n, function(i) c(el[el[,1]==i,2],el[el[,2]==i,1]))
hashSize <- c(500, 1000, 5000, 10000, 100000)
rho <- 1 / hashSize
pest2 <- list()
for(i in 1:10){
rds <- sampRDS(el, d, seeds,g,ns,FALSE)
pest2[[i]] <- sapply(hashSize, function(hs){
hash <- floor(runif(n, min = 0, max=hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
})
print(pest2[[i]])
}
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste0("P", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[2,]))
colnames(pest_cross) <- paste0("C", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,20000), xlab="Hash Size",
main=paste0("Configuration n=",ns," seeds=",seeds," n_sim=",nrow(pest_est)," (P=Pooled, C=Cross Seed)"))
abline(h=n,col="red")
hs
hash <- floor(runif(n, min = 0, max=hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
hash[!(1:n %in% rds$subject)] <- NA
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
hash <- floor(runif(n, min = 0, max=hs))
which((1:n %in% rds$subject))
length(which((1:n %in% rds$subject)))
hash <- floor(runif(n, min = 0, max=hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
hash[!(1:n %in% rds$subject)] <- NA
hash
min(rds$subject)
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
source('~/Dropbox/telefunken2_BK/R/rds-pop.R')
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
opt <- uniroot(function(N) NTilda(N) - N, interval=c(2, 7000000000))
NTilda(10000)
hash[subject]
install.packages("moments")
instrall.packages("xgboost")
install.packages("xgboost")
install.packages("data.table")
install.packages("gtools")
source("rds-pop.R")
n <- 10000 #pop size
ns <- 700 # rds sample size
seeds <- 7 # #of seeds
#d <- round(rlnorm(n,meanlog = 1)) + 1
d <- round(rexp(n,1/5)) + 1 #heavy tailed degrees
#d <- rpois(n,lambda = 5) + 1 #light tail
#d <- rep(10, n)
g <- rep(1,n)
el <- makeGraph(d)
nbrs <- lapply(1:n, function(i) c(el[el[,1]==i,2],el[el[,2]==i,1]))
pest <- list()
for(i in 1:20){
rds <- sampRDS(el, d, seeds,g,ns,FALSE, pr = c(0,.1,.9))
pest[[i]] <- unlist(populationEstimate(rds$subject,rds$recruiter, d[rds$subject], nbrs))
print(pest[[i]])
}
?do.call
rm(list=ls())
rds <- sampRDS(el, d, seeds,g,ns,FALSE, pr = c(0,.1,.9))
source("rds-pop.R")
n <- 10000 #pop size
ns <- 700 # rds sample size
seeds <- 7 # #of seeds
#d <- round(rlnorm(n,meanlog = 1)) + 1
d <- round(rexp(n,1/5)) + 1 #heavy tailed degrees
#d <- rpois(n,lambda = 5) + 1 #light tail
#d <- rep(10, n)
g <- rep(1,n)
el <- makeGraph(d)
nbrs <- lapply(1:n, function(i) c(el[el[,1]==i,2],el[el[,2]==i,1]))
pest <- list()
lst <- list()
rds <- sampRDS(el, d, seeds,g,ns,FALSE, pr = c(0,.1,.9))
lst[rds$subject] <- nbrs[rds$subject]
unlist(populationEstimate(rds$subject,rds$recruiter, d[rds$subject], nbrs))
unlist(populationEstimate(rds$subject,rds$recruiter, d[rds$subject], lst))
1/6
boxplot(pest,ylim=c(0,20000))
hashSize <- c(500, 1000, 5000, 10000, 100000)
rho <- 1 / hashSize
pest2 <- list()
for(i in 1:100){
rds <- sampRDS(el, d, seeds,g,ns,FALSE)
pest2[[i]] <- sapply(hashSize, function(hs){
hash <- floor(runif(n, min = 0, max=hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs, hash, 1 / hs))
})
print(pest2[[i]])
}
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste0("P", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[2,]))
colnames(pest_cross) <- paste0("C", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,20000), xlab="Hash Size",
main=paste0("Configuration n=",ns," seeds=",seeds," n_sim=",nrow(pest_est)," (P=Pooled, C=Cross Seed)"))
abline(h=n,col="red")
source("rds-pop.R")
load("brightkite.rdata")
n <- nrow(loc)
id <- loc$id
idmap <- id
for(i in 1:length(id)) idmap[id[i]] <- i
el1 <- cbind(idmap[el[,1]], idmap[el[,2]])
el1 <- cbind(pmin(el1[,1],el1[,2]),pmax(el1[,1],el1[,2]))
el1 <- unique(el1)
el1 <- cbind(el1, 1)
nbrs1 <- lapply(1:n, function(i){if(i %% 100 == 1)print(i); c(el1[el1[,1]==i,2],el1[el1[,2]==i,1])})
ns <- 2000 # rds sample size
seeds <- 12 # #of seeds
g <- rep(1,n)
d <- sapply(nbrs1,length)
dim(el1)
n
dim(el)
dim(el)/2
hashSize <- c(1000, 5000, 10000, 100000, 1000000)
rho <- 1 / hashSize
pest2 <- list()
for(i in 1:500){
rds <- sampRDS(el1, d, seeds,g,ns,FALSE)
pest2[[i]] <- sapply(hashSize, function(hs){
hash <- floor(runif(n, min = 0, max=hs))
unlist(populationEstimateHash(rds$subject,rds$recruiter, d[rds$subject], nbrs1, hash, 1 / hs))
})
print(pest2[[i]])
}
pest_est <- t(sapply(pest2, function(x) x[1,]))
colnames(pest_est) <- paste0("P", hashSize)
pest_cross <- t(sapply(pest2, function(x) x[2,]))
colnames(pest_cross) <- paste0("C", hashSize)
boxplot(cbind(pest_est,pest_cross),ylim=c(0,120000), xlab="Hash Size",
main=paste0("britekite n=",ns," seeds=",seeds," n_sim=",nrow(pest_est)," (P=Pooled, C=Cross Seed)"))
abline(h=n,col="red")
